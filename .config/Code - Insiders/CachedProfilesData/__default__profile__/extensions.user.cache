{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/silverest/.vscode-insiders/extensions/extensions.json","path":"/home/silverest/.vscode-insiders/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1685213897775,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.79.0-insider","productDate":"2023-05-26T05:24:15.146Z","productCommit":"2dfb838f494f035099e999f0cd0eff5f1f488a30","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"enkia.tokyo-night","uuid":"1cac7443-911e-48b9-8341-49f3880c288a"},"manifest":{"name":"tokyo-night","displayName":"Tokyo Night","description":"A clean Visual Studio Code theme that celebrates the lights of Downtown Tokyo at night.","version":"0.9.9","publisher":"enkia","license":"MIT","keywords":["theme","contrast","dark","light","tokyo","clean"],"icon":"icon.png","homepage":"https://github.com/enkia/tokyo-night-vscode-theme","repository":{"url":"https://github.com/enkia/tokyo-night-vscode-theme","type":"git"},"bugs":{"url":"https://github.com/enkia/tokyo-night-vscode-theme/issues"},"galleryBanner":{"color":"#1f2335","theme":"dark"},"engines":{"vscode":"^1.17.0"},"categories":["Themes","Other"],"contributes":{"themes":[{"label":"Tokyo Night","uiTheme":"vs-dark","path":"./themes/tokyo-night-color-theme.json"},{"label":"Tokyo Night Storm","uiTheme":"vs-dark","path":"./themes/tokyo-night-storm-color-theme.json"},{"label":"Tokyo Night Light","uiTheme":"vs","path":"./themes/tokyo-night-light-color-theme.json"}]},"scripts":{"package":"vsce package","publish":"vsce publish"}},"location":{"$mid":1,"path":"/home/silverest/.vscode-insiders/extensions/enkia.tokyo-night-0.9.9","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"1cac7443-911e-48b9-8341-49f3880c288a","publisherId":"745c7670-02e7-4a27-b662-e1b5719f2ba7","publisherDisplayName":"enkia","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1685192574454,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"scala-lang.scala","uuid":"c6f87c08-f5ca-4f59-8cee-bc29464dcbfb"},"manifest":{"name":"scala","displayName":"Scala Syntax (official)","description":"Official Scala Syntax","version":"0.5.6","publisher":"scala-lang","license":"SEE LICENSE IN LICENSE.md","engines":{"vscode":"^1.5.0"},"homepage":"https://github.com/scala/vscode-scala-syntax/blob/main/README.md","repository":{"type":"git","url":"https://github.com/scala/vscode-scala-syntax.git"},"icon":"images/smooth-spiral.png","categories":["Programming Languages"],"contributes":{"languages":[{"id":"scala","aliases":["Scala","scala"],"extensions":[".scala",".sbt",".sc"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"scala","scopeName":"source.scala","path":"./syntaxes/Scala.tmLanguage.json"}]},"devDependencies":{"@types/node":"^14.6.4","ajv":"^6.12.4","github-changes":"^2.0.2","npm-run-all":"^4.1.5","rimraf":"^3.0.2","ts-node":"^9.0.0","typescript":"^4.0.2","vsce":"^2.7.0","vscode-tmgrammar-test":"0.0.11"},"scripts":{"clean":"rimraf scala-*.vsix","vscode:prepublish":"test -f ./syntaxes/Scala.tmLanguage.json","vscode:publish":"vsce publish --yarn","build":"npm-run-all build:syntax build:extension","build:syntax":"ts-node src/typescript/GenerateTmLanguageFile.ts > ./syntaxes/Scala.tmLanguage.json","build:extension":"vsce package --yarn","test":"npm-run-all test:*","test:unit":"vscode-tmgrammar-test -s source.scala -g syntaxes/Scala.tmLanguage.json -t 'tests/unit/**/*.test.scala'","test:snap":"vscode-tmgrammar-snap -s source.scala -g syntaxes/Scala.tmLanguage.json -t 'tests/snap/**/*.test.scala'"}},"location":{"$mid":1,"path":"/home/silverest/.vscode-insiders/extensions/scala-lang.scala-0.5.6","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"c6f87c08-f5ca-4f59-8cee-bc29464dcbfb","publisherId":"2ffc6e5b-e6aa-408c-98b4-47db120356c8","publisherDisplayName":"scala-lang","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1685192588223,"preRelease":true},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"scalameta.metals","uuid":"d56562ae-394d-46cd-a26d-2eafab4ce5a2"},"manifest":{"name":"metals","displayName":"Scala (Metals)","description":"Scala language server with rich IDE features","keywords":["scala","lsp","language server","ide","scalameta"],"version":"1.23.3","publisher":"scalameta","contributors":[{"name":"Alexey Alekhin","url":"https://github.com/laughedelic"},{"name":"Gabriele Petronella","url":"https://github.com/gabro"},{"name":"Ólafur Páll Geirsson","url":"https://github.com/olafurpg"}],"license":"Apache-2.0","bugs":{"url":"https://github.com/scalameta/metals-vscode/issues"},"repository":{"type":"git","url":"https://github.com/scalameta/metals-vscode.git"},"homepage":"https://scalameta.org/metals/","engines":{"vscode":"^1.63.0"},"icon":"images/logo.png","categories":["Programming Languages","Debuggers"],"activationEvents":["onCommand:metals.start-server","onCommand:metals.new-scala-project","onDebugResolve:scala","onLanguage:scala","workspaceContains:build.sbt","workspaceContains:build.sc","workspaceContains:project/build.properties","workspaceContains:project.scala","workspaceContains:.scala-build","workspaceContains:src/main/scala","workspaceContains:*/src/main/scala","workspaceContains:*/*/src/main/scala"],"contributes":{"languages":[{"id":"javap-verbose","extensions":[".javap-verbose"],"icon":{"dark":"icons/file_type_java.svg","light":"icons/file_type_java.svg"}},{"id":"semanticdb","extensions":[".semanticdb-detailed",".semanticdb-compact"]},{"id":"javap","extensions":[".javap"],"icon":{"dark":"icons/file_type_java.svg","light":"icons/file_type_java.svg"}},{"id":"java","extensions":[".cfr"],"icon":{"dark":"icons/file_type_java.svg","light":"icons/file_type_java.svg"}},{"id":"tasty","aliases":["TASTy","tasty"],"extensions":[".tasty-decoded"],"icon":{"dark":"icons/file_type_scala.svg","light":"icons/file_type_scala.svg"}},{"id":"buildtarget","extensions":[".metals-buildtarget"],"icon":{"dark":"icons/book-dark.svg","light":"icons/book-light.svg"}},{"id":"semanticdb","extensions":[".semanticdb",".semanticdb-detailed",".semanticdb-compact",".semanticdb-proto"],"icon":{"dark":"icons/scalameta-logo.png","light":"icons/scalameta-logo.png"}}],"grammars":[{"language":"javap-verbose","scopeName":"source.jvm-bytecode-verbose","path":"./syntaxes/jvm-bytecode-verbose.json"},{"language":"javap","scopeName":"source.jvm-bytecode","path":"./syntaxes/jvm-bytecode.json"},{"language":"tasty","scopeName":"source.tasty","path":"./syntaxes/tasty.json"},{"language":"buildtarget","scopeName":"source.buildtarget","path":"./syntaxes/buildtarget.json"},{"language":"semanticdb","scopeName":"source.semanticdb","path":"./syntaxes/semanticdb.json"}],"configurationDefaults":{"[scala]":{"editor.suggestSelection":"first","editor.formatOnPaste":true,"editor.formatOnType":true}},"viewsContainers":{"activitybar":[{"id":"metals-explorer","title":"Metals","icon":"images/scalameta.svg"},{"id":"metals-find-in-files","title":"Find in files (Metals)","icon":"$(search)"}]},"viewsWelcome":[{"view":"metalsPackages","contents":"No Scala project found. Create a new one or start Metals manually.\n[New Scala project](command:metals.new-scala-project)\n[Start Metals](command:metals.start-server)","when":"!metals:enabled || workbenchState != empty"}],"views":{"metals-find-in-files":[{"id":"metalsFindInFiles","name":"Find in files (Metals)","when":"metals.showFindInFiles"}],"metals-explorer":[{"id":"metalsPackages","name":"Packages"},{"id":"metalsBuild","name":"Build commands"},{"id":"metalsCompile","name":"Ongoing compilations"},{"id":"metalsHelp","name":"Help and feedback"}]},"configuration":{"title":"Metals","properties":{"metals.serverVersion":{"type":"string","default":"0.11.12","markdownDescription":"The version of the Metals server artifact. Requires reloading the window.  \n\n**VS Code extension version is guaranteed to work only with the default version, change if you know what you're doing**"},"metals.serverProperties":{"type":"array","items":{"type":"string"},"default":["-Xmx1G"],"markdownDescription":"Optional list of properties to pass along to the Metals server. By default, the environment variable `JAVA_OPTS` and `.jvmopts` file are respected. Each property needs to be a separate item.\n\nExample: `-Dhttps.proxyHost=…`, `-Dhttps.proxyPort=…` or `-Dmetals.statistics=all`"},"metals.coursierMirror":{"type":"string","markdownDescription":"Optional alternative repository to maven central if maven central is not available. For example: `https://jcenter.bintray.com`, which will be used to set to property described [here](https://get-coursier.io/blog/#mirrors)"},"metals.ammoniteJvmProperties":{"type":"array","items":{"type":"string"},"markdownDescription":"Optional list of JVM properties to pass along to the Ammonite server. Each property needs to be a separate item.\n\nExample: `-Xmx1G` or `-Xms100M`"},"metals.excludedPackages":{"type":"array","default":[],"markdownDescription":"List of packages you'd like to be left out of completions, symbol searches, and code actions.\n\nEx. `akka.actor.typed.javadsl` will ensure nothing in the `javadsl` package gets recommended to you.\n\nYou can find the list of default exclusions [here on the Metals website](https://scalameta.org/metals/docs/editors/user-configuration/#excluded-packages).\n\nIf you need to remove one of the defaults, you can simply include it and preface it with `--`."},"metals.showInferredType":{"type":"boolean","markdownDescription":"When this option is enabled, for each method that have inferred types that are not explicitely specified they are displayed as additional decorations."},"metals.showImplicitArguments":{"type":"boolean","markdownDescription":"When this option is enabled, for each method that has implicit arguments they are displayed as additional decorations."},"metals.showImplicitConversionsAndClasses":{"type":"boolean","markdownDescription":"When this option is enabled, each implicit method and class is displayed as additional decorations at the usage site."},"metals.javaHome":{"type":"string","scope":"machine-overridable","markdownDescription":"Optional path to the Java home directory. Requires reloading the window.\n\nDefaults to the most recent Java version between 8 and 17 (inclusive) computed by the `locate-java-home` npm package."},"metals.sbtScript":{"type":"string","markdownDescription":"Optional absolute path to an `sbt` executable to use for running `sbt bloopInstall`.\n\nBy default, Metals uses `java -jar sbt-launch.jar` with an embedded launcher while respecting `.jvmopts` and `.sbtopts`.\n\nUpdate this setting if your `sbt` script requires more customizations like using environment variables."},"metals.millScript":{"type":"string","markdownDescription":"Optional absolute path to a `mill` executable to use for running `mill mill.contrib.Bloop/install`.\n\nBy default, Metals uses an embedded `millw` script while respecting `.mill-version` file.\n\nUpdate this setting if your `mill` script requires more customizations."},"metals.mavenScript":{"type":"string","markdownDescription":"Optional absolute path to a `mvn` executable to use for running `mvn ch.epfl.scala:maven-bloop_2.10:<bloop_version>:bloopInstall`.\n\nBy default, Metals uses an embedded `mvnw` script.\n\nUpdate this setting if your `mvn` script requires more customizations."},"metals.gradleScript":{"type":"string","markdownDescription":"Optional absolute path to a `gradle` executable to use for running `gradle bloopInstall`.\n\nBy default, Metals uses an embedded `gradlew` script.\n\nUpdate this setting if your `gradle` script requires more customizations."},"metals.scalafmtConfigPath":{"type":"string","markdownDescription":"Optional custom path to the .scalafmt.conf file.\n\nShould be an absolute path and use forward slashes `/` for file separators (even on Windows)."},"metals.scalafixConfigPath":{"type":"string","markdownDescription":"Optional custom path to the .scalafix.conf file.\n\nShould be an absolute path and use forward slashes `/` for file separators (even on Windows)."},"metals.scalafixRulesDependencies":{"type":"array","scope":"machine","items":{"type":"string"},"markdownDescription":"List of Scalafix rules dependencies in case they are not available by default in Metals and running scalafix fails due to 'rule not found' exception. For example: `com.github.liancheng::organize-imports:0.6.0` which follows the [coursier](https://get-coursier.io/) convention."},"metals.bloopVersion":{"type":"string","scope":"machine","markdownDescription":"This version will be used for the Bloop build tool plugin, for any supported build tool,while importing in Metals as well as for running the embedded server"},"metals.bloopJvmProperties":{"type":"array","scope":"machine","items":{"type":"string"},"markdownDescription":"Optional list of JVM properties to pass along to the Bloop server. Each property needs to be a separate item.\n\nExample: `-Xmx1G` or `-Xms100M`"},"metals.bloopSbtAlreadyInstalled":{"type":"boolean","markdownDescription":"If true, Metals will not generate a `project/metals.sbt` file under the assumption that sbt-bloop is already manually installed in the sbt build. Build import will fail with a 'not valid command bloopInstall' error in case Bloop is not manually installed in the build when using this option."},"metals.customRepositories":{"type":"array","items":{"type":"string"},"markdownDescription":"Optional list of custom resolvers passed to Coursier when fetching metals dependencies.\n\nFor documentation on accepted values see the [Coursier documentation](https://get-coursier.io/docs/other-repositories).\n\nThe extension will pass these to Coursier using the COURSIER_REPOSITORIES environment variable after joining the custom repositories with a pipe character (|)."},"metals.superMethodLensesEnabled":{"type":"boolean","default":true,"description":"Enable/disable goto super method code lens."},"metals.enableStripMarginOnTypeFormatting":{"type":"boolean","default":true,"markdownDescription":"When enabled, if you press the return key from the first line of a multiline string containing a pipe, it will automatically add `.stripMargin`."},"metals.enableIndentOnPaste":{"type":"boolean","default":false,"markdownDescription":"When this option is enabled, when user pastes any snippet into a Scala file, Metals will try to adjust the indentation to that of the current cursor."},"metals.enableSemanticHighlighting":{"type":"boolean","default":false,"markdownDescription":"When this option is enabled, Metals will provide semantic tokens for clients that support it. The feature is still experimental and does not work for all sources."},"metals.testUserInterface":{"type":"string","default":"Test Explorer","enum":["Test Explorer","Code Lenses"],"markdownDescription":"Specifies which UI should be used for tests. `Code lenses` shows virtual text above test class, just like it was previously. `Test explorer` is a new option which shows gutter icons on the left of the file in a less intrusive way. Moreover, this option comes with a new panel called `Testing` which lists all test suites in your codebase and allows you to browse tests and navigate to the file which contains them."},"metals.fallbackScalaVersion":{"type":"string","default":"automatic","enum":["automatic","2.13.10","2.13.9","2.13.8","2.13.7","2.13.6","2.13.5","2.13.4","2.13.3","2.13.2","2.13.1","2.12.17","2.12.16","2.12.15","2.12.14","2.12.13","2.12.12","2.12.11","2.12.10","2.12.9","2.12.8","2.11.12","3.2.2","3.2.1","3.2.0","3.1.3","3.1.2","3.1.1","3.1.0","3.0.2","3.0.1","3.0.0"],"markdownDescription":"The Scala compiler version that is used as the default or fallback in case a file doesn't belong to any build target or the specified Scala version isn't supported by Metals.\n\nThis applies to standalone Scala files, worksheets, and Ammonite scripts.\n\n The `automatic` value means that the Scala version for these files will be inferred from the highest supported Scala version in your projects build definition"},"metals.javaFormat.eclipseConfigPath":{"type":"string","markdownDescription":"Optional custom path to the eclipse-formatter.xml file.\n\nShould be an absolute path and use forward slashes `/` for file separators (even on Windows)."},"metals.javaFormat.eclipseProfile":{"type":"string","markdownDescription":"Optional Eclipse format profile to use."},"metals.scalaCliLauncher":{"type":"string","markdownDescription":"Optional path to Scala CLI launcher to use."},"metals.suggestLatestUpgrade":{"type":"boolean","default":true,"markdownDescription":"Once in a day, notify if there are new server releases (including snapshots)"}}},"commands":[{"command":"metals.reveal-active-file","category":"Metals","title":"Reveal Active File in Side Bar","icon":{"light":"icons/focus-light.svg","dark":"icons/focus-dark.svg"}},{"command":"metals.restartServer","category":"Metals","title":"Restart server"},{"command":"metals.build-restart","category":"Metals","title":"Restart build server"},{"command":"metals.build-import","category":"Metals","title":"Import build"},{"command":"metals.build-connect","category":"Metals","title":"Connect to build server"},{"command":"metals.build-disconnect","category":"Metals","title":"Disconnect from the build server without restarting"},{"command":"metals.bsp-switch","category":"Metals","title":"Switch build server"},{"command":"metals.generate-bsp-config","category":"Metals","title":"Attempt to generate bsp config for build tool."},{"command":"metals.sources-scan","category":"Metals","title":"Rescan sources"},{"command":"metals.compile-cascade","category":"Metals","title":"Cascade compile"},{"command":"metals.compile-clean","category":"Metals","title":"Recompile workspace"},{"command":"metals.compile-cancel","category":"Metals","title":"Cancel compilation"},{"command":"metals.doctor-run","category":"Metals","title":"Run doctor"},{"command":"metals.zip-reports","category":"Metals","title":"Zip reports"},{"command":"metals.show-release-notes","category":"Metals","title":"Show release notes"},{"command":"metals.scalafix-run","category":"Metals","title":"Run all Scalafix rules"},{"command":"metals.show-tasty","category":"Metals","title":"Show decoded TASTy"},{"command":"metals.show-cfr","category":"Metals","title":"Show decompiled with CFR"},{"command":"metals.show-javap","category":"Metals","title":"Show decompiled with javap"},{"command":"metals.show-javap-verbose","category":"Metals","title":"Show decompiled with javap verbose"},{"command":"metals.show-semanticdb-compact","category":"Metals","title":"Show Semanticdb"},{"command":"metals.show-semanticdb-detailed","category":"Metals","title":"Show Semanticdb detailed"},{"command":"metals.show-semanticdb-proto","category":"Metals","title":"Show Semanticdb proto"},{"command":"metals.target-info-display","category":"Metals","title":"Display build target info"},{"command":"metals.new-scala-project","category":"Metals","title":"New Scala Project"},{"command":"metals.new-scala-file","category":"Metals","title":"New Scala File..."},{"command":"metals.new-java-file","category":"Metals","title":"New Java File..."},{"command":"metals.new-scala-worksheet","category":"Metals","title":"Create Worksheet"},{"command":"metals.open-new-github-issue","category":"Metals","title":"Open new github issue"},{"command":"metals.super-method-hierarchy","category":"Metals","title":"Reveal super method hierachy"},{"command":"metals.reset-choice","category":"Metals","title":"Reset Choice"},{"command":"metals.reset-notifications","category":"Metals","title":"Reset Notifications"},{"command":"metals.analyze-stacktrace","category":"Metals","title":"Analyze Stacktrace"},{"command":"metals.goto-super-method","category":"Metals","title":"Go to super method"},{"command":"metals.ammonite-start","category":"Metals","title":"Start Ammonite build server"},{"command":"metals.ammonite-stop","category":"Metals","title":"Stop Ammonite build server"},{"command":"metals.scala-cli-start","category":"Metals","title":"Start Scala CLI BSP server"},{"command":"metals.scala-cli-stop","category":"Metals","title":"Stop Scala CLI BSP server"},{"command":"metals.toggle-implicit-conversions-and-classes","category":"Metals","title":"Toggle showing implicit conversions and classes"},{"command":"metals.toggle-implicit-parameters","category":"Metals","title":"Toggle showing implicit parameters"},{"command":"metals.toggle-show-inferred-type","category":"Metals","title":"Toggle showing inferred type"},{"command":"metals.copy-worksheet-output","category":"Metals","title":"Copy worksheet output"},{"command":"metals.run-current-file","category":"Metals","title":"Run main class or tests in the current file"},{"command":"metals.test-current-target","category":"Metals","title":"Run all test in the current project"},{"command":"metals.symbol-search","category":"Metals","title":"Search symbol in workspace"},{"command":"metals.find-text-in-dependency-jars","category":"Metals","title":"Find text in dependency JAR files"}],"submenus":[{"id":"metals.analyze","label":"Metals Analyse Source"}],"keybindings":[{"key":"ctrl+t","mac":"cmd+t","command":"metals.symbol-search","when":"editorLangId == scala || editorLangId == java || editorLangId == sbt || editorLangId == sc"},{"key":"ctrl+alt+shift+o","mac":"cmd+alt+shift+o","command":"metals.scalafix-run","when":"editorLangId == scala"}],"menus":{"view/title":[{"command":"metals.reveal-active-file","group":"navigation","when":"view == metalsPackages"}],"commandPalette":[{"command":"metals.show-tasty","when":"metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.tasty || metals:enabled && resourceExtname==.tasty-decoded || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc"},{"command":"metals.show-cfr","when":"metals:enabled && resourceExtname==.java || metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.class || metals:enabled && resourceExtname==.cfr || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc"},{"command":"metals.show-javap","when":"metals:enabled && resourceExtname==.java || metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.class || metals:enabled && resourceExtname==.javap || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc"},{"command":"metals.show-javap-verbose","when":"metals:enabled && resourceExtname==.java || metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.class || metals:enabled && resourceExtname==.javap-verbose || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc"},{"command":"metals.show-semanticdb-compact","when":"metals:enabled && resourceExtname==.java || metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.semanticdb || metals:enabled && resourceExtname==.semanticdb-compact || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc"},{"command":"metals.show-semanticdb-detailed","when":"metals:enabled && resourceExtname==.java || metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.semanticdb || metals:enabled && resourceExtname==.semanticdb-detailed || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc"},{"command":"metals.show-semanticdb-proto","when":"metals:enabled && resourceExtname==.java || metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.semanticdb || metals:enabled && resourceExtname==.semanticdb-proto || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc"},{"command":"metals.reveal-active-file","when":"metals:enabled"},{"command":"metals.toggle-implicit-conversions-and-classes","when":"metals:enabled"},{"command":"metals.toggle-implicit-parameters","when":"metals:enabled"},{"command":"metals.toggle-show-inferred-type","when":"metals:enabled"},{"command":"metals.restartServer","when":"metals:enabled"},{"command":"metals.build-import","when":"metals:enabled"},{"command":"metals.build-restart","when":"metals:enabled"},{"command":"metals.build-connect","when":"metals:enabled"},{"command":"metals.sources-scan","when":"metals:enabled"},{"command":"metals.compile-cascade","when":"metals:enabled"},{"command":"metals.compile-clean","when":"metals:enabled"},{"command":"metals.compile-cancel","when":"metals:enabled"},{"command":"metals.doctor-run","when":"metals:enabled"},{"command":"metals.zip-reports","when":"metals:enabled"},{"command":"metals.show-release-notes","when":"metals:enabled"},{"command":"metals.scalafix-run","when":"metals:enabled"},{"command":"metals.target-info-display","when":"metals:enabled"},{"command":"metals.new-scala-file","when":"metals:enabled"},{"command":"metals.new-java-file","when":"metals:enabled"},{"command":"metals.new-scala-project","when":"metals:enabled"},{"command":"metals.super-method-hierarchy","when":"metals:enabled"},{"command":"metals.analyze-stacktrace","when":"metals:enabled"},{"command":"metals.goto-super-method","when":"metals:enabled"},{"command":"metals.reset-choice","when":"metals:enabled"},{"command":"metals.reset-notifications","when":"metals:enabled"},{"command":"metals.ammonite-start","when":"metals:enabled"},{"command":"metals.ammonite-stop","when":"metals:enabled"},{"command":"metals.scala-cli-start","when":"metals:enabled"},{"command":"metals.scala-cli-stop","when":"metals:enabled"}],"explorer/context":[{"command":"metals.new-scala-file","when":"metals:enabled","group":"navigation@1"},{"command":"metals.new-java-file","when":"metals:enabled","group":"navigation@2"},{"submenu":"metals.analyze","when":"metals:enabled && resourceExtname==.java || metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.class || metals:enabled && resourceExtname==.semanticdb || metals:enabled && resourceExtname==.tasty || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc","group":"navigation@3"}],"metals.analyze":[{"command":"metals.show-tasty","when":"metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.tasty || metals:enabled && resourceExtname==.tasty-decoded || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc","group":"metals-1@1"},{"command":"metals.show-cfr","when":"metals:enabled && resourceExtname==.java || metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.class || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc","group":"metals-2@1"},{"command":"metals.show-javap","when":"metals:enabled && resourceExtname==.java || metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.class || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc","group":"metals-3@1"},{"command":"metals.show-javap-verbose","when":"metals:enabled && resourceExtname==.java || metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.class || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc","group":"metals-3@2"},{"command":"metals.show-semanticdb-compact","when":"metals:enabled && resourceExtname==.java || metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.semanticdb || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc","group":"metals-4@1"},{"command":"metals.show-semanticdb-detailed","when":"metals:enabled && resourceExtname==.java || metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.semanticdb || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc","group":"metals-4@2"},{"command":"metals.show-semanticdb-proto","when":"metals:enabled && resourceExtname==.java || metals:enabled && resourceExtname==.scala || metals:enabled && resourceExtname==.semanticdb || metals:enabled && resourceExtname==.sbt || metals:enabled && resourceExtname==.sc","group":"metals-4@3"}],"view/item/context":[{"command":"metals.target-info-display","when":"view == metalsPackages && viewItem == project"}]},"breakpoints":[{"language":"scala"},{"language":"java"}],"debuggers":[{"type":"scala","label":"Scala Debugger","languages":["scala"],"configurationAttributes":{"launch":{"properties":{"mainClass":{"type":"string","description":"Name of the main class to run"},"testClass":{"type":"string","description":"Name of the test class to run"},"buildTarget":{"type":"string","description":"Name of the build target of the class to run, can be found in the projects section of the Metals tab"},"args":{"type":"array","items":{"type":"string"},"description":"Arguments passed to the class to run","default":[]},"jvmOptions":{"type":"array","items":{"type":"string"},"default":[]},"env":{"type":"object","items":{"type":"string"},"default":{}},"envFile":{"type":"string","description":"Name of a .env file with additional environment variables","default":null}}},"attach":{"properties":{"buildTarget":{"type":"string","description":"Name of the build target to debug"},"hostName":{"type":"string","description":"Host name of the debuggee JVM"},"port":{"type":"number","description":"Port to attach to"}}}},"configurationSnippets":[{"label":"Scala: Run main class","description":"A new configuration for running a debug session of a main class","body":{"type":"scala","request":"launch","name":"Untitled","mainClass":"???","args":[],"jvmOptions":[],"env":{}}},{"label":"Scala: Run test class","description":"A new configuration for running a debug session of a test class","body":{"type":"scala","request":"launch","name":"Untitled","testClass":"???"}},{"label":"Scala: Attach debugger","description":"A new configuration for running a debug session of a remote JVM","body":{"type":"scala","request":"attach","name":"Untitled","buildTarget":"???","hostName":"localhost","port":5005}},{"label":"Scala: Play framework prod server","description":"A new configuration for running a production Play framework production server","body":{"type":"scala","request":"launch","name":"Play main","mainClass":"play.core.server.ProdServerStart","args":[],"jvmOptions":[],"buildTarget":"???"}}]}]},"main":"./out/extension","scripts":{"vscode:prepublish":"yarn compile","compile":"tsc -p ./","clean":"rimraf out/","watch":"tsc -watch -p ./","test":"ts-mocha src/test/unit/*.test.ts","test-extension":"rimraf out/ && tsc -p ./ && node out/test/extension/runTest.js","build":"yarn clean && vsce package --yarn","vscode:publish":"vsce publish --yarn","ovsx:publish":"ovsx publish","lint":"eslint . --ext .ts --fix && yarn format","format":"prettier --write **/*.{ts,js,json}","format-check":"prettier --check **/*.{ts,js,json}"},"devDependencies":{"@sourcegraph/scip-typescript":"^0.3.7","@types/chai":"^4.3.4","@types/glob":"^8.1.0","@types/marked":"^4.0.8","@types/mocha":"^10.0.1","@types/node":"18.15.5","@types/semver":"^7.3.13","@types/sinon":"^10.0.13","@types/vscode":"1.63.0","@typescript-eslint/eslint-plugin":"^5.56.0","@typescript-eslint/parser":"^5.56.0","@vscode/test-electron":"^2.3.0","@vscode/vsce":"^2.19.0","chai":"^4.3.7","eslint":"^8.36.0","eslint-config-prettier":"^8.8.0","eslint-plugin-mocha":"^10.1.0","glob":"^9.3.1","mkdirp":"2.1.5","mocha":"^10.2.0","ovsx":"0.8.0","prettier":"2.8.5","rimraf":"^4.4.0","sinon":"^15.0.2","ts-mocha":"^10.0.0","typescript":"5.0.2"},"dependencies":{"ansicolor":"^1.1.100","marked":"^4.2.12","metals-languageclient":"file:../metals-languageclient","promisify-child-process":"4.1.1","semver":"^7.3.8","vscode-languageclient":"8.1.0"},"extensionPack":["scala-lang.scala"]},"location":{"$mid":1,"path":"/home/silverest/.vscode-insiders/extensions/scalameta.metals-1.23.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"d56562ae-394d-46cd-a26d-2eafab4ce5a2","publisherId":"5b1ac358-daf6-4046-980b-bb94d2c94e8a","publisherDisplayName":"Scalameta","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":true,"installedTimestamp":1685192589244,"preRelease":true},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"github.copilot-nightly","uuid":"c2321d37-f89d-47b1-92b5-9db847d8f654"},"manifest":{"name":"copilot-nightly","displayName":"GitHub Copilot Nightly","description":"Your AI pair programmer","version":"1.86.118","build":"118","buildType":"nightly","publisher":"GitHub","preview":false,"homepage":"https://github.com/features/copilot","bugs":{"url":"https://github.com/community/community/discussions/categories/copilot"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/Copilot-App-Icon.png","pricing":"Trial","engines":{"vscode":"^1.74.0","npm":">=8.0.0"},"categories":["Programming Languages","Machine Learning","Education","Snippets"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished"],"main":"./dist/extension","enabledApiProposals":["inlineCompletionsAdditions","terminalDataWriteEvent"],"contributes":{"commands":[{"command":"github.copilot.acceptCursorPanelSolution","title":"Accept panel suggestion at the cursor","category":"GitHub Copilot"},{"command":"github.copilot.previousPanelSolution","title":"Navigate to the previous panel suggestion","category":"GitHub Copilot"},{"command":"github.copilot.nextPanelSolution","title":"Navigate to the next panel suggestion","category":"GitHub Copilot"},{"command":"github.copilot.generate","title":"Open Completions Panel","category":"GitHub Copilot"},{"command":"github.copilot.toggleCopilot","title":"Enable/Disable Copilot","category":"GitHub Copilot"},{"command":"github.copilot.sendFeedback","title":"Send Feedback","category":"GitHub Copilot"},{"command":"github.copilot.collectDiagnostics","title":"Collect Diagnostics","category":"GitHub Copilot"}],"keybindings":[{"command":"github.copilot.generate","key":"ctrl+enter","mac":"ctrl+enter","when":"editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"},{"command":"github.copilot.acceptCursorPanelSolution","key":"ctrl+/","mac":"ctrl+/","when":"github.copilot.activated && github.copilot.panelVisible"},{"command":"github.copilot.previousPanelSolution","key":"alt+[","mac":"alt+[","when":"github.copilot.activated && github.copilot.panelVisible"},{"command":"github.copilot.nextPanelSolution","key":"alt+]","mac":"alt+]","when":"github.copilot.activated && github.copilot.panelVisible"},{"command":"editor.action.inlineSuggest.trigger","key":"alt+\\","when":"editorTextFocus && !editorHasSelection && config.github.copilot.inlineSuggest.enable && !inlineSuggestionsVisible"}],"menus":{"editor/inlineCompletions/actions":[{"command":"github.copilot.generate","when":"github.copilot.activated"}],"commandPalette":[{"command":"github.copilot.generate","when":"github.copilot.activated"},{"command":"github.copilot.toggleCopilot","when":"github.copilot.activated"},{"command":"github.copilot.sendFeedback","when":"github.copilot.activated"},{"command":"github.copilot.collectDiagnostics"}]},"configuration":[{"title":"Copilot","properties":{"github.copilot.advanced":{"type":"object","title":"Advanced Settings","properties":{"secret_key":{"type":"string","default":"","description":"Secret API key"},"length":{"type":"integer","default":500,"description":"Length of code to generate in tokens"},"temperature":{"type":"string","default":"","description":"Override sampling temperature (range 0.0 - 1.0)"},"top_p":{"type":"number","default":1,"description":"Top probability mass to consider"},"stops":{"type":"object","default":{"*":["\n\n\n"],"python":["\ndef ","\nclass ","\nif ","\n\n#"]},"description":"Configure per-language stop sequences"},"indentationMode":{"type":"object","default":{"python":false,"javascript":false,"javascriptreact":false,"jsx":false,"typescript":false,"typescriptreact":false,"go":false,"ruby":false,"*":true},"markdownDescription":"Enable or disable indentation block termination for specified [languages](https://code.visualstudio.com/docs/languages/identifiers). Set to 'clientandserver' to run both parser-based and indent-based termination."},"inlineSuggestCount":{"type":"integer","default":3,"description":"Number of inline suggestions to fetch"},"listCount":{"type":"integer","default":10,"description":"Number of solutions to list in Open GitHub Copilot"},"authProvider":{"type":"string","enum":["github","github-enterprise"],"enumDescriptions":["GitHub.com","GitHub Enterprise"],"default":"github","description":"The GitHub identity to use for Copilot"},"debug.showScores":{"type":"boolean","default":false,"description":"Show scores in sorted solutions"},"debug.overrideEngine":{"type":"string","default":"","description":"Override engine name"},"debug.overrideProxyUrl":{"type":"string","default":"","description":"Override GitHub authentication proxy full URL"},"debug.testOverrideProxyUrl":{"type":"string","default":"","description":"Override GitHub authentication proxy URL when running tests"},"debug.filterLogCategories":{"type":"array","default":[],"description":"Show only log categories listed in this setting. If an array is empty, show all loggers"}}},"github.copilot.enable":{"type":"object","default":{"*":true,"plaintext":false,"markdown":false,"scminput":false},"markdownDescription":"Enable or disable Copilot for specified [languages](https://code.visualstudio.com/docs/languages/identifiers)"},"github.copilot.inlineSuggest.enable":{"type":"boolean","default":true,"description":"Show inline suggestions"},"github.copilot.editor.enableAutoCompletions":{"type":"boolean","default":true,"description":"Automatically show inline completions"}}}],"languages":[{"id":"copilotignore","filenames":[".copilotignore"],"icon":{"dark":"assets/font-icons/Github-Copilot-Light.svg","light":"assets/font-icons/Github-Copilot.svg"}}],"icons":{"copilot-logo":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0041"}},"copilot-warning":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0042"}},"copilot-notconnected":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0043"}}},"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}]},"scripts":{"postinstall":"npx vscode-dts dev && mv vscode.proposed.*.ts extension/src","vscode:prepublish":"npm-run-all build:extension","build":"npm-run-all build:*","build:agent":"cd agent && npm run build","build:agent-no-pkg":"cd agent && npm run build-no-pkg","build:extension":"webpack --mode production","build:lib":"cd lib && npm run build","compile":"npm-run-all compile:*","compile:agent":"cd agent && npm run compile","compile:extension":"webpack --mode development","compile:lib":"cd lib && npm run compile","watch":"npm-run-all -p watch:*","watch:agent":"cd agent && npm run watch","watch:extension":"webpack --mode development --watch","watch:lib":"cd lib && npm run watch","lint":"eslint lib extension agent --ext ts --cache","check_deps":"depcruise -c .dependency-cruiser.js .","test":"npm-run-all test:*","test:agent":"cd agent && npm run test","test:extension":"cd extension && ts-node ./test/runTest.ts --insiders","test:prompt":"cd prompt && npm install && npm run test","test:lib":"cd lib && npm run test","test:lsp-client":"cd lsp-client && npm run test","build_test":"tsc extension/test/run.ts","get_token":"ts-node script/getToken.ts","generate_languages":"ts-node script/generateLanguages.ts && prettier --write lib/src/language/generatedLanguages.ts","esbuild:build":"npm-run-all esbuild:build:*","esbuild:build:agent":"cd agent && npm run esbuild:build","esbuild:build:agent-no-pkg":"cd agent && npm run esbuild:build-no-pkg","esbuild:build:extension":"npx tsx .esbuild/extension.esbuild.ts production","esbuild:watch":"npm-run-all -p esbuild:watch:*","esbuild:watch:agent":"cd agent && npm run esbuild:watch","esbuild:watch:extension":"npx tsx .esbuild/extension.esbuild.ts","esbuild:watch:lib":"cd lib && npm run esbuild:watch","esbuild:compile":"npm-run-all esbuild:compile:*","esbuild:compile:agent":"cd agent && npm run esbuild:compile","esbuild:compile:extension":"npx tsx .esbuild/extension.esbuild.ts production","esbuild:compile:lib":"cd lib && npm run esbuild:compile"},"devDependencies":{"@github/prettier-config":"0.0.6","@types/crypto-js":"^4.1.1","@types/git-url-parse":"^9.0.1","@types/js-yaml":"^4.0.5","@types/mocha":"^10.0.1","@types/node":"^16.18.24","@types/node-forge":"^1.3.0","@types/sinon":"^10.0.13","@types/tunnel":"^0.0.3","@types/uuid":"^9.0.1","@types/vscode":"^1.74.0","@typescript-eslint/eslint-plugin":"^5.59.5","@typescript-eslint/parser":"^5.59.5","@vscode/test-electron":"^2.3.0","@vscode/vsce":"2.18.0","dependency-cruiser":"^13.0.0","esbuild":"^0.17.17","eslint":"^8.40.0","eslint-plugin-no-only-tests":"^3.1.0","fantasticon":"^1.2.3","get-port":"^6.0.0","ignore-loader":"^0.1.2","js-yaml":"^4.1.0","mocha":"^10.2.0","npm-run-all":"^4.1.5","prettier":"2.8.8","prettier-plugin-organize-imports":"^3.2.2","proxy":"^1.0.2","sinon":"^15.0.3","ts-dedent":"^2.2.0","ts-loader":"^9.4.2","ts-node":"^10.9.1","typed-emitter":"^2.1.0","typescript":"^5.0.3","vscode-dts":"^0.3.3","webpack":"^5.76.0","webpack-cli":"^5.1.1","zlib":"^1.0.5"},"dependencies":{"@github/memoize":"1.1.4","@adobe/helix-fetch":"github:bmuskalla/helix-fetch#4e33e47bf6e64b637d5d713558fde504bf71c947","@github/copilot-promptlib":"file:prompt","@roamhq/mac-ca":"^1.0.7","@sinclair/typebox":"^0.28.9","@vscode/debugprotocol":"^1.59.0","ajv":"8.11.0","ajv-errors":"^3.0.0","applicationinsights":"^2.6.0","crypto-js":"^4.1.1","diff":"^5.1.0","git-url-parse":"^13.1.0","ignore":"^5.2.4","jsonc-parser":"^3.2.0","node-forge":"^1.3.1","open":"^8.4.2","source-map-support":"^0.5.21","tunnel":"^0.0.6","uuid":"^9.0.0","valtio":"^1.10.4","vscode-uri":"^3.0.7","win-ca":"^3.5.0"}},"location":{"$mid":1,"path":"/home/silverest/.vscode-insiders/extensions/github.copilot-nightly-1.86.118","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"c2321d37-f89d-47b1-92b5-9db847d8f654","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1685192700343,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"github.copilot-chat","uuid":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f"},"manifest":{"name":"copilot-chat","displayName":"GitHub Copilot Chat","description":"AI chat features powered by Copilot","version":"0.1.2023052602","build":"1","buildType":"prod","publisher":"GitHub","preview":false,"homepage":"https://github.com/features/copilot","repository":{"type":"git","url":"https://github.com/community/community/discussions/categories/copilot"},"bugs":{"url":"https://github.com/community/community/discussions/categories/copilot"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/Copilot-App-Icon.png","pricing":"Trial","engines":{"vscode":"^1.78.0-insider","npm":">=8.0.0"},"categories":["Programming Languages","Machine Learning","Education","Snippets"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished"],"main":"./dist/extension","enabledApiProposals":["interactive","interactiveUserActions","terminalDataWriteEvent","semanticSimilarity","handleIssueUri"],"contributes":{"interactiveSession":[{"label":"GitHub Copilot","id":"copilot","icon":"","when":"github.copilot.interactiveSession.enabled"}],"commands":[{"command":"github.copilot.interactiveEditor.explain","title":"Explain This","enablement":"github.copilot.interactiveSession.enabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.generate","title":"Generate Code","enablement":"github.copilot.interactiveSession.enabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveSession.feedback","title":"Send Chat Feedback","icon":"$(feedback)","category":"GitHub Copilot"},{"command":"github.copilot.debug.workbenchState","title":"Log Workbench State","category":"Developer"},{"command":"github.copilot.ghpr.applySuggestion","title":"Apply Suggestion with AI","icon":"$(sparkle)","category":"GitHub Copilot"}],"submenus":[{"id":"copilot","label":"Copilot"}],"menus":{"editor/context":[{"submenu":"copilot","when":"github.copilot.interactiveSession.enabled && !editorReadonly","group":"1_copilot@0"}],"copilot":[{"command":"interactiveEditor.start","when":"github.copilot.interactiveSession.enabled && !editorReadonly","group":"copilot@1"},{"command":"github.copilot.interactiveEditor.explain","when":"github.copilot.interactiveSession.enabled && !editorReadonly","group":"copilotAction@1"}],"commandPalette":[{"command":"github.copilot.interactiveSession.feedback","when":"github.copilot.activated && github.copilot.interactiveSession.enabled"},{"command":"github.copilot.debug.workbenchState","when":"true"}],"view/title":[{"command":"github.copilot.interactiveSession.feedback","when":"view == workbench.panel.interactiveSession.view.copilot","group":"navigation"}],"comments/comment/title":[{"command":"github.copilot.ghpr.applySuggestion","title":"Apply Suggestion with AI","group":"inline@0","when":"commentController =~ /^github-review/"}]},"icons":{"copilot-logo":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0041"}},"copilot-warning":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0042"}},"copilot-notconnected":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0043"}}},"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}],"keybindings":[{"command":"workbench.panel.interactiveSessionSidebar.copilot","key":"ctrl+alt+i","mac":"cmd+ctrl+i"}]},"scripts":{"postinstall":"npx vscode-dts dev && mv vscode.proposed.*.ts extension/src","vscode:prepublish":"npm-run-all build:extension","build":"npm-run-all build:*","build:extension":"webpack --mode production","build:lib":"cd lib && npm run build","compile":"npm-run-all compile:*","compile:extension":"webpack --mode development","compile:lib":"cd lib && npm run compile","watch":"npm-run-all -p watch:*","watch:extension":"webpack --mode development --watch","watch:lib":"cd lib && npm run watch","lint":"eslint lib extension --ext ts --cache","check_deps":"depcruise -c .dependency-cruiser.js .","test":"npm-run-all test:*","test:extension":"cd extension && ts-node ./test/runTest.ts --insiders","test:prompt":"cd prompt && npm install && npm run test","test:lib":"cd lib && npm run test","build_test":"tsc extension/test/run.ts","get_token":"ts-node script/getToken.ts","generate_languages":"ts-node script/generateLanguages.ts && prettier --write lib/src/language/generatedLanguages.ts","patch-prerelease":"ts-node script/build/applyPatchForPrerelease.ts","esbuild:build":"npm-run-all esbuild:build:*","esbuild:build:extension":"npx tsx .esbuild/extension.esbuild.ts production","esbuild:watch":"npm-run-all -p esbuild:watch:*","esbuild:watch:extension":"npx tsx .esbuild/extension.esbuild.ts","esbuild:watch:lib":"cd lib && npm run esbuild:watch","esbuild:compile":"npm-run-all esbuild:compile:*","esbuild:compile:extension":"npx tsx .esbuild/extension.esbuild.ts production","esbuild:compile:lib":"cd lib && npm run esbuild:compile","prettier":"prettier --list-different --write --cache ."},"devDependencies":{"@github/prettier-config":"0.0.6","@types/crypto-js":"^4.1.1","@types/git-url-parse":"^9.0.1","@types/js-yaml":"^4.0.5","@types/mocha":"^10.0.1","@types/node":"^16.18.24","@types/node-forge":"^1.3.0","@types/sinon":"^10.0.13","@types/tunnel":"^0.0.3","@types/uuid":"^9.0.1","@types/vscode":"^1.74.0","@typescript-eslint/eslint-plugin":"^5.58.0","@typescript-eslint/parser":"^5.56.0","@vscode/test-electron":"^2.3.0","@vscode/vsce":"2.19.0","dependency-cruiser":"^12.11.1","esbuild":"^0.17.17","eslint":"^8.38.0","eslint-plugin-no-only-tests":"^3.1.0","fantasticon":"^2.0.0","get-port":"^5.1.1","ignore-loader":"^0.1.2","js-yaml":"^4.1.0","mocha":"^10.2.0","npm-run-all":"^4.1.5","prettier":"2.8.7","prettier-plugin-organize-imports":"^3.2.2","proxy":"^1.0.2","sinon":"^15.1.0","ts-dedent":"^2.2.0","ts-loader":"^9.4.2","ts-node":"^10.9.1","typed-emitter":"^2.1.0","typescript":"^5.0.4","vscode-dts":"^0.3.3","webpack":"^5.76.0","webpack-cli":"^5.0.1","zlib":"^1.0.5"},"dependencies":{"@adobe/helix-fetch":"github:bmuskalla/helix-fetch#4e33e47bf6e64b637d5d713558fde504bf71c947","@github/copilot-promptlib":"file:prompt","@roamhq/mac-ca":"^1.0.7","@sinclair/typebox":"^0.26.8","@vscode/debugprotocol":"^1.59.0","ajv":"8.12.0","ajv-errors":"^3.0.0","applicationinsights":"^2.5.1","crypto-js":"^4.1.1","diff":"^5.1.0","git-url-parse":"^13.1.0","ignore":"^5.2.4","jsonc-parser":"^3.2.0","node-forge":"^1.3.1","open":"^8.4.2","source-map-support":"^0.5.21","tunnel":"^0.0.6","uuid":"^9.0.0","valtio":"^1.10.4","vscode-uri":"^3.0.7","win-ca":"^3.5.0"}},"location":{"$mid":1,"path":"/home/silverest/.vscode-insiders/extensions/github.copilot-chat-0.1.2023052602","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":true,"installedTimestamp":1685192714970,"preRelease":true},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vscodevim.vim","uuid":"d96e79c6-8b25-4be3-8545-0e0ecefcae03"},"manifest":{"name":"vim","displayName":"Vim","description":"Vim emulation for Visual Studio Code","icon":"images/icon.png","version":"1.25.2","publisher":"vscodevim","galleryBanner":{"color":"#e3f4ff","theme":"light"},"license":"MIT","keywords":["vim","vi","vscodevim"],"repository":{"type":"git","url":"https://github.com/VSCodeVim/Vim.git"},"homepage":"https://github.com/VSCodeVim/Vim","bugs":{"url":"https://github.com/VSCodeVim/Vim/issues"},"engines":{"vscode":"^1.74.0"},"categories":["Other","Keymaps"],"extensionKind":["ui"],"sideEffects":false,"activationEvents":["*","onCommand:type"],"qna":"https://vscodevim.herokuapp.com/","main":"./out/extension","browser":"./out/extensionWeb","capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"contributes":{"commands":[{"command":"toggleVim","title":"Vim: Toggle Vim Mode"},{"command":"vim.showQuickpickCmdLine","title":"Vim: Show Command Line"},{"command":"vim.editVimrc","enablement":"!isWeb","title":"Vim: Edit .vimrc"}],"keybindings":[{"key":"Escape","command":"extension.vim_escape","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Escape","command":"notebook.cell.quitEdit","when":"inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible && vim.active && vim.mode == 'Normal'"},{"key":"Home","command":"extension.vim_home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+home","command":"extension.vim_ctrl+home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"End","command":"extension.vim_end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+end","command":"extension.vim_ctrl+end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"Insert","command":"extension.vim_insert","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Backspace","command":"extension.vim_backspace","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Delete","command":"extension.vim_delete","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"tab","command":"extension.vim_tab","when":"editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+tab","command":"extension.vim_shift+tab","when":"editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"left","command":"extension.vim_left","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"right","command":"extension.vim_right","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"up","command":"extension.vim_up","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"down","command":"extension.vim_down","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"g g","command":"list.focusFirst","when":"listFocus && !inputFocus"},{"key":"h","command":"list.collapse","when":"listFocus && !inputFocus"},{"key":"j","command":"list.focusDown","when":"listFocus && !inputFocus"},{"key":"k","command":"list.focusUp","when":"listFocus && !inputFocus"},{"key":"l","command":"list.select","when":"listFocus && !inputFocus"},{"key":"o","command":"list.toggleExpand","when":"listFocus && !inputFocus"},{"key":"/","command":"list.toggleKeyboardNavigation","when":"listFocus && !inputFocus && listSupportsKeyboardNavigation"},{"key":"ctrl+a","command":"extension.vim_ctrl+a","when":"editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"},{"key":"ctrl+b","command":"extension.vim_ctrl+b","when":"editorTextFocus && vim.active && vim.use<C-b> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+c","command":"extension.vim_ctrl+c","when":"editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl && vim.overrideCtrlC"},{"key":"ctrl+d","command":"extension.vim_ctrl+d","when":"editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"},{"key":"ctrl+d","command":"list.focusPageDown","when":"listFocus && !inputFocus"},{"key":"ctrl+e","command":"extension.vim_ctrl+e","when":"editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"},{"key":"ctrl+f","command":"extension.vim_ctrl+f","when":"editorTextFocus && vim.active && vim.use<C-f> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+g","command":"extension.vim_ctrl+g","when":"editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"},{"key":"ctrl+h","command":"extension.vim_ctrl+h","when":"editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"},{"key":"ctrl+i","command":"extension.vim_ctrl+i","when":"editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"},{"key":"ctrl+j","command":"extension.vim_ctrl+j","when":"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"},{"key":"ctrl+k","command":"extension.vim_ctrl+k","when":"editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"},{"key":"ctrl+l","command":"extension.vim_navigateCtrlL","when":"editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"},{"key":"ctrl+m","command":"extension.vim_ctrl+m","when":"editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-m> && !inDebugRepl"},{"key":"ctrl+n","command":"extension.vim_ctrl+n","when":"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-n> && !inDebugRepl"},{"key":"ctrl+o","command":"extension.vim_ctrl+o","when":"editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"},{"key":"ctrl+p","command":"extension.vim_ctrl+p","when":"suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-p> && !inDebugRepl"},{"key":"ctrl+q","command":"extension.vim_winCtrlQ","when":"editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"},{"key":"ctrl+r","command":"extension.vim_ctrl+r","when":"editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"},{"key":"ctrl+s","command":"extension.vim_ctrl+s","when":"editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"},{"key":"ctrl+t","command":"extension.vim_ctrl+t","when":"editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"},{"key":"ctrl+u","command":"extension.vim_ctrl+u","when":"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"},{"key":"ctrl+u","command":"list.focusPageUp","when":"listFocus && !inputFocus"},{"key":"ctrl+v","command":"extension.vim_ctrl+v","when":"editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"},{"key":"ctrl+w","command":"extension.vim_ctrl+w","when":"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"},{"key":"ctrl+x","command":"extension.vim_ctrl+x","when":"editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"},{"key":"ctrl+y","command":"extension.vim_ctrl+y","when":"editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"},{"key":"ctrl+z","command":"extension.vim_ctrl+z","when":"editorTextFocus && vim.active && vim.use<C-z> && !inDebugRepl"},{"key":"ctrl+6","command":"extension.vim_ctrl+6","when":"editorTextFocus && vim.active && vim.use<C-6> && !inDebugRepl"},{"key":"ctrl+^","command":"extension.vim_ctrl+^","when":"editorTextFocus && vim.active && vim.use<C-^> && !inDebugRepl"},{"key":"ctrl+[","command":"extension.vim_ctrl+[","when":"editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"},{"key":"ctrl+]","command":"extension.vim_ctrl+]","when":"editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"},{"key":"ctrl+shift+2","command":"extension.vim_ctrl+shift+2","when":"editorTextFocus && vim.active && vim.use<C-shift+2>"},{"key":"ctrl+up","command":"extension.vim_ctrl+up","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+down","command":"extension.vim_ctrl+down","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+left","command":"extension.vim_ctrl+left","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+right","command":"extension.vim_ctrl+right","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+pagedown","command":"extension.vim_ctrl+pagedown","when":"editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"},{"key":"ctrl+pageup","command":"extension.vim_ctrl+pageup","when":"editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"},{"key":"ctrl+space","command":"extension.vim_ctrl+space","when":"editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"shift+G","command":"list.focusLast","when":"listFocus && !inputFocus"},{"key":"ctrl+backspace","command":"extension.vim_ctrl+backspace","when":"editorTextFocus && vim.active && vim.use<C-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+backspace","command":"extension.vim_shift+backspace","when":"editorTextFocus && vim.active && vim.use<S-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"cmd+left","command":"extension.vim_cmd+left","when":"editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+right","command":"extension.vim_cmd+right","when":"editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+a","command":"extension.vim_cmd+a","when":"editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+c","command":"extension.vim_cmd+c","when":"editorTextFocus && vim.active && vim.use<D-c> && vim.overrideCopy && !inDebugRepl"},{"key":"cmd+d","command":"extension.vim_cmd+d","when":"editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"},{"key":"cmd+v","command":"extension.vim_cmd+v","when":"editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'CommandlineInProgress' && !inDebugRepl || editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"},{"key":"ctrl+alt+down","linux":"shift+alt+down","mac":"cmd+alt+down","command":"extension.vim_cmd+alt+down","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+alt+up","linux":"shift+alt+up","mac":"cmd+alt+up","command":"extension.vim_cmd+alt+up","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"j","command":"notebook.focusNextEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"},{"key":"k","command":"notebook.focusPreviousEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"}],"configuration":{"title":"Vim","type":"object","properties":{"vim.normalModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.normalModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.useCtrlKeys":{"type":"boolean","markdownDescription":"Enable some Vim Ctrl key commands that override otherwise common operations, like `Ctrl+C`.","default":true},"vim.leader":{"type":"string","markdownDescription":"What key should `<leader>` map to in remappings?","default":"\\"},"vim.searchHighlightColor":{"type":"string","markdownDescription":"Background color of non-current search matches. The color must not be opaque so as not to hide underlying decorations. Uses `#editor.findMatchHighlightColor#` from current theme if undefined."},"vim.searchHighlightTextColor":{"type":"string","markdownDescription":"Foreground color of non-current search matches."},"vim.searchMatchColor":{"type":"string","markdownDescription":"Background color of the current match. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.searchMatchTextColor":{"type":"string","markdownDescription":"Foreground color of the current match."},"vim.substitutionColor":{"type":"string","markdownDescription":"Background color of substituted text when `#editor.inccommand#` is enabled. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.substitutionTextColor":{"type":"string","markdownDescription":"Foreground color of substituted text when `#editor.inccommand#` is enabled."},"vim.highlightedyank.enable":{"type":"boolean","description":"Enable highlighting when yanking.","default":false},"vim.highlightedyank.color":{"type":"string","description":"Background color of yanked text. The color must not be opaque so as not to hide underlying decorations.","default":"rgba(250, 240, 170, 0.5)"},"vim.highlightedyank.textColor":{"type":"string","description":"Foreground color of yanked text."},"vim.highlightedyank.duration":{"type":"number","description":"Duration in milliseconds of the yank highlight.","default":200,"minimum":1},"vim.useSystemClipboard":{"type":"boolean","description":"Use system clipboard for unnamed register.","default":false},"vim.overrideCopy":{"type":"boolean","description":"Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.","default":true},"vim.insertModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.insertModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.textwidth":{"type":"number","markdownDescription":"Width to word-wrap to when using `gq`.","default":80,"scope":"language-overridable","minimum":1},"vim.timeout":{"type":"number","description":"Timeout in milliseconds for remapped commands.","default":1000,"minimum":0},"vim.maxmapdepth":{"type":"number","description":"Maximum number of times a mapping is done without resulting in a character to be used.","default":1000,"minimum":0},"vim.scroll":{"type":"number","markdownDescription":"Number of lines to scroll with `Ctrl-U` and `Ctrl-D` commands. Set to 0 to use a half page scroll.","default":0,"minimum":0},"vim.showcmd":{"type":"boolean","description":"Show the text of any command you are in the middle of writing.","default":true},"vim.showmodename":{"type":"boolean","description":"Show the name of the current mode in the statusbar.","default":true},"vim.iskeyword":{"type":"string","markdownDescription":"Keywords contain alphanumeric characters and '_'. If not configured, `#editor.wordSeparators#` is used."},"vim.ignorecase":{"type":"boolean","description":"Ignore case in search patterns.","default":true},"vim.smartcase":{"type":"boolean","markdownDescription":"Override the `ignorecase` option if the search pattern contains upper case characters.","default":true},"vim.matchpairs":{"type":"string","markdownDescription":"Characters that form pairs. The % command jumps from one to the other. Only character pairs are allowed that are different, thus you cannot jump between two double quotes. The characters must be separated by a colon. The pairs must be separated by a comma.","default":"(:),{:},[:]"},"vim.camelCaseMotion.enable":{"type":"boolean","markdownDescription":"Enable the [CamelCaseMotion](https://github.com/bkad/CamelCaseMotion) plugin for Vim.","default":false},"vim.easymotion":{"type":"boolean","markdownDescription":"Enable the [EasyMotion](https://github.com/easymotion/vim-easymotion) plugin for Vim.","default":false},"vim.easymotionMarkerBackgroundColor":{"type":"string","default":"#0000","description":"Set a custom background color for EasyMotion markers."},"vim.easymotionMarkerForegroundColorOneChar":{"type":"string","default":"#ff0000","description":"Set a custom color for the text on one character long markers."},"vim.easymotionMarkerForegroundColorTwoCharFirst":{"type":"string","default":"#ffb400","description":"Set a custom color for the first character on two character long markers."},"vim.easymotionMarkerForegroundColorTwoCharSecond":{"type":"string","default":"#b98300","description":"Set a custom color for the second character on two character long markers."},"vim.easymotionIncSearchForegroundColor":{"type":"string","default":"#7fbf00","markdownDescription":"Set a custom color for the easymotion search n-character (default `<leader><leader>/`)."},"vim.easymotionDimColor":{"type":"string","default":"#777777","markdownDescription":"Set a custom color for the easymotion dimmed characters when `#vim.easymotionDimBackground#` is set to true."},"vim.easymotionDimBackground":{"type":"boolean","description":"Whether to dim other text while markers are visible.","default":true},"vim.easymotionMarkerFontWeight":{"type":"string","description":"Set the font weight of the marker text.","default":"bold"},"vim.easymotionKeys":{"type":"string","description":"Set the characters used for jump marker name.","default":"hklyuiopnm,qwertzxcvbasdgjf;"},"vim.easymotionJumpToAnywhereRegex":{"type":"string","description":"Regex matches for JumpToAnywhere motion.","default":"\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]"},"vim.replaceWithRegister":{"type":"boolean","markdownDescription":"Enable the [ReplaceWithRegister](https://github.com/vim-scripts/ReplaceWithRegister) plugin for Vim.","default":false},"vim.smartRelativeLine":{"type":"boolean","markdownDescription":"`#editor.lineNumbers#` is determined by the active Vim mode, absolute when in insert mode, relative otherwise.","default":false},"vim.targets.enable":{"type":"boolean","markdownDescription":"Enable [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects) plugin (not fully implemented yet).","default":false},"vim.targets.bracketObjects.enable":{"type":"boolean","markdownDescription":"Enable last/next movements for bracket objects.","default":true},"vim.targets.smartQuotes.enable":{"type":"boolean","markdownDescription":"Enable the smart quotes movements from [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects).","default":true},"vim.targets.smartQuotes.breakThroughLines":{"type":"boolean","markdownDescription":"Whether to break through lines when using [n]ext/[l]ast motion, see [targets.vim#next-and-last-quote](https://github.com/wellle/targets.vim#next-and-last-quote).","default":true},"vim.targets.smartQuotes.aIncludesSurroundingSpaces":{"type":"boolean","markdownDescription":"Whether to use default Vim behavior when using `a` (e.g. `da'`) which include surrounding spaces, or not, as for other text objects.","default":true},"vim.sneak":{"type":"boolean","markdownDescription":"Enable the [Sneak](https://github.com/justinmk/vim-sneak) plugin for Vim.","default":false},"vim.sneakUseIgnorecaseAndSmartcase":{"type":"boolean","markdownDescription":"Case sensitivity is determined by `#vim.ignorecase#` and `#vim.smartcase#`.","default":false},"vim.sneakReplacesF":{"type":"boolean","markdownDescription":"Use single-character [Sneak](https://github.com/justinmk/vim-sneak) instead of Vim's native `f`.","default":false},"vim.surround":{"type":"boolean","markdownDescription":"Enable the [Surround](https://github.com/tpope/vim-surround) plugin for Vim.","default":true},"vim.argumentObjectSeparators":{"type":"array","items":{"type":"string"},"markdownDescription":"Set separators for the argument text object.","default":[","]},"vim.argumentObjectOpeningDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set opening delimiters for the argument text object.","default":["(","["]},"vim.argumentObjectClosingDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set closing delimiters for the argument text object.","default":[")","]"]},"vim.hlsearch":{"type":"boolean","description":"Show all matches of the most recent search pattern.","default":false},"vim.inccommand":{"type":"string","markdownDescription":"Show the effects of the `:substitute` command as you type.","default":"replace","enum":["","append","replace"],"enumDescriptions":["Don't show substitutions","Show substitutions after matched text","Replace matched text with substitutions"]},"vim.incsearch":{"type":"boolean","markdownDescription":"Show where a `/` or `?` search matches as you type it.","default":true},"vim.history":{"type":"number","description":"How much search or command history should be remembered.","default":50,"minimum":1},"vim.autoindent":{"type":"boolean","description":"Indent code automatically.","default":true},"vim.joinspaces":{"type":"boolean","description":"Add two spaces after '.', '?', and '!' when joining or reformatting.","default":true},"vim.startInInsertMode":{"type":"boolean","description":"Start in Insert mode."},"vim.handleKeys":{"type":"object","description":"Delegate certain key combinations back to VSCode to be handled natively.","default":{"<C-d>":true,"<C-s>":false,"<C-z>":false}},"vim.statusBarColorControl":{"type":"boolean","markdownDescription":"Allow VSCodeVim to change status bar color based on mode. **NOTE:** Using this feature will have a negative impact on performance.","default":false},"vim.statusBarColors.normal":{"type":["string","array"],"description":"Status bar color when in Normal mode.","default":"#005f5f"},"vim.statusBarColors.insert":{"type":["string","array"],"description":"Status bar color when in Insert mode.","default":"#5f0000"},"vim.statusBarColors.visual":{"type":["string","array"],"description":"Status bar color when in Visual mode.","default":"#5f00af"},"vim.statusBarColors.visualline":{"type":["string","array"],"description":"Status bar color when in VisualLine mode.","default":"#005f5f"},"vim.statusBarColors.visualblock":{"type":["string","array"],"description":"Status bar color when in VisualBlock mode.","default":"#86592d"},"vim.statusBarColors.replace":{"type":["string","array"],"description":"Status bar color when in Replace mode.","default":"#00000"},"vim.statusBarColors.commandlineinprogress":{"type":["string","array"],"description":"Status bar color when in CommandLineInProgress mode.","default":"#007acc"},"vim.statusBarColors.searchinprogressmode":{"type":["string","array"],"description":"Status bar color when in SearchInProgress mode.","default":"#007acc"},"vim.statusBarColors.easymotionmode":{"type":["string","array"],"description":"Status bar color when in EasyMotion mode.","default":"#007acc"},"vim.statusBarColors.easymotioninputmode":{"type":["string","array"],"description":"Status bar color when in EasyMotionInput mode.","default":"#007acc"},"vim.statusBarColors.surroundinputmode":{"type":["string","array"],"description":"Status bar color when in SurroundInput mode.","default":"#007acc"},"vim.visualstar":{"type":"boolean","markdownDescription":"In Visual mode, start a search with `*` or `#` using the current selection.","default":false},"vim.changeWordIncludesWhitespace":{"type":"boolean","description":"Includes trailing whitespace when changing word.","default":false},"vim.foldfix":{"type":"boolean","description":"Uses a hack to move around folds properly.","default":false},"vim.mouseSelectionGoesIntoVisualMode":{"type":"boolean","description":"If enabled, dragging with the mouse activates Visual mode.","default":true},"vim.disableExtension":{"type":"boolean","description":"Disables the VSCodeVim extension. The extension will continue to be loaded and activated, but Vim functionality will be disabled.","default":false},"vim.enableNeovim":{"type":"boolean","markdownDescription":"Use Neovim to execute Ex commands. You should restart VS Code after enabling/disabling this for the changes to take effect. **NOTE:** Neovim version 0.2.0 or greater must be installed, and if the executable is not on your PATH, `#vim.neovimPath#` must be set.","default":false},"vim.neovimPath":{"type":"string","markdownDescription":"Path to Neovim executable. For example, `/usr/bin/nvim`, or  `C:\\Program Files\\Neovim\\bin\\nvim.exe`.","default":"","scope":"machine"},"vim.neovimUseConfigFile":{"type":"boolean","markdownDescription":"Use a config file for Neovim, specified by `vim.neovimConfigPath`.","default":false},"vim.neovimConfigPath":{"type":"string","markdownDescription":"Path to Neovim configuration file. `vim.neovimUseConfigFile` must be enabled. If path is left blank, Neovim will use its default config path, i.e. `~/.config/nvim/init.vim` or 'C:\\Users\\USERNAME\\AppData\\Local\\nvim\\init.vim'.","default":"","scope":"machine"},"vim.vimrc.enable":{"type":"boolean","markdownDescription":"Use key mappings from a `.vimrc` file.","default":false},"vim.vimrc.path":{"type":"string","markdownDescription":"Path to a Vim configuration file. If unset, it will check for `$HOME/.vscodevimrc`, `$HOME/.vimrc`, `$HOME/_vimrc`, and `$HOME/.config/nvim/init.vim`, in that order."},"vim.substituteGlobalFlag":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false,"markdownDeprecationMessage":"**Deprecated**: Please use `#vim.gdefault#` instead.","deprecationMessage":"Deprecated: Please use vim.gdefault instead."},"vim.gdefault":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false},"vim.cursorStylePerMode.normal":{"type":"string","description":"Cursor style for Normal mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.insert":{"type":"string","description":"Cursor style for Insert mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.replace":{"type":"string","description":"Cursor style for Replace mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visual":{"type":"string","description":"Cursor style for Visual mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualline":{"type":"string","description":"Cursor style for VisualLine mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualblock":{"type":"string","description":"Cursor style for VisualBlock mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.autoSwitchInputMethod.enable":{"type":"boolean","description":"If enabled, the input method switches automatically when the mode changes.","default":false},"vim.autoSwitchInputMethod.defaultIM":{"type":"string","markdownDescription":"The input method for your normal mode, find more information [here](https://github.com/VSCodeVim/Vim#input-method).","default":"","scope":"machine"},"vim.autoSwitchInputMethod.switchIMCmd":{"type":"string","description":"The shell command to switch input method.","default":"/path/to/im-select {im}","scope":"machine"},"vim.autoSwitchInputMethod.obtainIMCmd":{"type":"string","description":"The shell command to get current input method.","default":"/path/to/im-select","scope":"machine"},"vim.whichwrap":{"type":"string","description":"Comma-separated list of motion keys that should wrap to next/previous line.","default":"b,s"},"vim.report":{"type":"number","description":"Threshold for reporting number of lines changed.","default":2,"minimum":1},"vim.digraphs":{"type":"object","description":"Custom digraph shortcuts for inserting special characters, expressed as UTF16 code points.","default":{}},"vim.wrapscan":{"type":"boolean","description":"Searches wrap around the end of the file.","default":true},"vim.startofline":{"type":"boolean","markdownDescription":"When `true` the commands listed below move the cursor to the first non-blank of the line.  When `false` the cursor is kept in the same column (if possible).  This applies to the commands: `<C-d>`, `<C-u>`, `<C-b>`, `<C-f>`, `G`, `H`, `M`, `L`, `gg`, and to the commands `d`, `<<` and `>>` with a linewise operator.","default":true},"vim.showMarksInGutter":{"type":"boolean","description":"Show the currently set mark(s) in the gutter.","default":false},"vim.shell":{"type":"string","description":"Path to the shell to use for `!` and `:!` commands.","default":""}}},"languages":[{"id":"vimrc","extensions":[".vimrc"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"vimrc","scopeName":"source.vimrc","path":"./syntaxes/vimrc.tmLanguage.json"}]},"scripts":{"vscode:prepublish":"gulp build","build":"gulp build","build-dev":"gulp build-dev","build-test":"gulp prepare-test","test":"node ./out/test/runTest.js","lint":"tslint --project .","lint:fix":"tslint --project . --fix","prettier":"prettier --write .","prettier:check":"prettier --check .","watch":"webpack -c webpack.dev.js --watch","package":"yarn run vsce package --yarn --allow-star-activation","prepare":"husky install"},"dependencies":{"diff-match-patch":"1.0.5","lodash":"^4.17.21","neovim":"4.10.1","os-browserify":"0.3.0","parsimmon":"^1.18.0","path-browserify":"1.0.1","process":"0.11.10","queue":"^6.0.2","untildify":"4.0.0","util":"0.12.5"},"devDependencies":{"@types/diff":"5.0.2","@types/diff-match-patch":"1.0.32","@types/glob":"8.1.0","@types/lodash":"4.14.191","@types/mocha":"10.0.1","@types/node":"16.18.13","@types/parsimmon":"1.10.6","@types/sinon":"10.0.13","@types/vscode":"1.74.0","@vscode/test-electron":"2.3.0","circular-dependency-plugin":"^5.2.2","clean-webpack-plugin":"4.0.0","event-stream":"4.0.1","fork-ts-checker-webpack-plugin":"7.3.0","gulp":"4.0.2","gulp-bump":"3.2.0","gulp-git":"2.10.1","gulp-tag-version":"1.3.1","gulp-typescript":"5.0.1","husky":"^8.0.3","lint-staged":"^13.1.2","minimist":"1.2.8","mocha":"10.2.0","plugin-error":"2.0.1","prettier":"2.8.4","sinon":"15.0.1","ts-loader":"9.4.2","tslint":"6.1.3","typescript":"4.9.5","vsce":"2.15.0","webpack":"5.75.0","webpack-cli":"5.0.1","webpack-merge":"5.8.0","webpack-stream":"7.0.0"},"lint-staged":{"*.{ts,js,json,md,yml}":"prettier --write","*.{ts}":"tslint --fix"}},"location":{"$mid":1,"path":"/home/silverest/.vscode-insiders/extensions/vscodevim.vim-1.25.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"d96e79c6-8b25-4be3-8545-0e0ecefcae03","publisherId":"5d63889b-1b67-4b1f-8350-4f1dce041a26","publisherDisplayName":"vscodevim","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1685193076477,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"justusadam.language-haskell","uuid":"270c1d3b-a657-446f-83b8-ab32fd7af006"},"manifest":{"name":"language-haskell","displayName":"Haskell Syntax Highlighting","description":"Syntax support for the Haskell programming language.","version":"3.6.0","publisher":"justusadam","engines":{"vscode":"^1.0.0"},"icon":"images/logo.png","galleryBanner":{"color":"#293845","theme":"dark"},"files":["src/*","syntaxes/*.json","images/","README.md","LICENSE","*-configuration.json","tsconfig.json","CHANGELOG.md"],"keywords":["language","haskell","highlight","syntax"],"license":"BSD-3-Clause","homepage":"https://github.com/JustusAdam/language-haskell","repository":{"type":"git","url":"https://github.com/JustusAdam/language-haskell.git"},"bugs":{"url":"https://github.com/JustusAdam/language-haskell/issues","email":"dev@justus.science"},"categories":["Programming Languages"],"activationEvents":["onLanguage:haskell"],"main":"./out/src/extension","contributes":{"configuration":{"type":"object","title":"Haskell configuration","properties":{"haskell.indentationRules.enabled":{"type":"boolean","default":true,"description":"Set to 'false' to disable automatically increasing indent on newlines after '=', 'do', 'where' etc."}}},"languages":[{"id":"haskell","aliases":["Haskell","haskell"],"extensions":[".hs",".hsig","hs-boot"],"configuration":"./haskell-configuration.json"},{"id":"cabal","aliases":["Cabal","cabal"],"extensions":[".cabal"],"configuration":"./cabal-configuration.json"},{"id":"C2Hs","aliases":["C2Hs","c2hs"],"extensions":[".chs"],"configuration":"./C2Hs-configuration.json"},{"id":"Hsc2Hs","aliases":["Hsc2Hs","HsC2Hs","hsc2hs"],"extensions":[".hsc"],"configuration":"./Hsc2Hs-configuration.json"},{"id":"literate haskell","aliases":["Literate Haskell","literate Haskell"],"extensions":[".lhs"],"configuration":"./literate-haskell-configuration.json"},{"id":"yaml","aliases":["YAML","yaml"],"filenames":["stack.yaml.lock"]},{"id":"alex","aliases":["Alex","alex","Haskell Alex"],"extensions":[".x"],"configuration":"./haskell-configuration.json"},{"id":"happy","aliases":["Happy","happy","Haskell Happy"],"extensions":[".y"],"configuration":"./haskell-configuration.json"}],"grammars":[{"language":"haskell","scopeName":"source.haskell","path":"./syntaxes/haskell.json"},{"language":"cabal","scopeName":"source.cabal","path":"./syntaxes/cabal.json"},{"language":"C2Hs","scopeName":"source.c2hs","path":"./syntaxes/C2Hs.json"},{"language":"Hsc2Hs","scopeName":"source.hsc","path":"./syntaxes/Hsc2Hs.json"},{"language":"literate haskell","scopeName":"text.tex.latex.haskell","path":"./syntaxes/literateHaskell.json"},{"language":"alex","scopeName":"source.haskell.alex","path":"./syntaxes/alex.json"},{"language":"happy","scopeName":"source.haskell.happy","path":"./syntaxes/happy.json"},{"scopeName":"markdown.haskell.codeblock","path":"./syntaxes/codeblock-haskell.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.haskell":"haskell"}},{"scopeName":"markdown.lhaskell.codeblock","path":"./syntaxes/codeblock-literate-haskell.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.lhaskell":"lhaskell"}},{"scopeName":"markdown.cabal.codeblock","path":"./syntaxes/codeblock-cabal.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.cabal":"cabal"}}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"js-yaml":"^3.13.1","npm":"^6.14.5","typescript":"^2.6.2","vsce":"^1.75.0","vscode":"^1.0.0"}},"location":{"$mid":1,"path":"/home/silverest/.vscode-insiders/extensions/justusadam.language-haskell-3.6.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"270c1d3b-a657-446f-83b8-ab32fd7af006","publisherId":"2c93d4f5-4858-4c44-9577-e3790e9f20cf","publisherDisplayName":"Justus Adam","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1685213894054,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"haskell.haskell","uuid":"aead9e6c-3483-4ce4-a09f-843e25ce696f"},"manifest":{"name":"haskell","displayName":"Haskell","description":"Haskell language support powered by the Haskell Language Server","version":"2.2.4","license":"MIT","publisher":"haskell","engines":{"vscode":"^1.77.0"},"keywords":["language","haskell","cabal","stack","lsp","multi-root ready"],"homepage":"https://github.com/haskell/vscode-haskell","repository":"https://github.com/haskell/vscode-haskell.git","bugs":{"url":"https://github.com/haskell/vscode-haskell/issues"},"categories":["Programming Languages","Formatters","Linters","Other"],"icon":"images/hls-logo.png","galleryBanner":{"color":"#22172A","theme":"dark"},"activationEvents":["onLanguage:haskell","onLanguage:literate haskell"],"main":"./dist/extension","contributes":{"languages":[{"id":"haskell","aliases":["Haskell","haskell"],"extensions":[".hs"]},{"id":"literate haskell","aliases":["Literate Haskell","literate Haskell"],"extensions":[".lhs"]}],"configuration":{"type":"object","title":"Haskell","properties":{"haskell.formattingProvider":{"scope":"resource","type":"string","enum":["brittany","floskell","fourmolu","ormolu","stylish-haskell","none"],"default":"ormolu","description":"The formatter to use when formatting a document or range. Ensure the plugin is enabled."},"haskell.openDocumentationInHackage":{"scope":"resource","type":"boolean","default":true,"description":"When opening 'Documentation' for external libraries, open in hackage by default. Set to false to instead open in vscode."},"haskell.openSourceInHackage":{"scope":"resource","type":"boolean","default":true,"description":"When opening 'Source' for external libraries, open in hackage by default. Set to false to instead open in vscode."},"haskell.trace.server":{"scope":"resource","type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the language server."},"haskell.trace.client":{"scope":"resource","type":"string","enum":["off","error","info","debug"],"default":"info","description":"Sets the log level in the client side."},"haskell.logFile":{"scope":"resource","type":"string","default":"","description":"If set, redirects the logs to a file."},"haskell.releasesURL":{"scope":"resource","type":"string","default":"","description":"An optional URL to override where ghcup checks for HLS-GHC compatibility list (usually at: https://raw.githubusercontent.com/haskell/ghcup-metadata/master/hls-metadata-0.0.1.json)"},"haskell.metadataURL":{"scope":"resource","type":"string","default":"","description":"An optional URL to override where ghcup checks for tool download info (usually at: https://raw.githubusercontent.com/haskell/ghcup-metadata/master/ghcup-0.0.7.yaml)"},"haskell.releasesDownloadStoragePath":{"scope":"resource","type":"string","default":"","markdownDescription":"An optional path where downloaded metadata will be stored. Check the default value [here](https://github.com/haskell/vscode-haskell#downloaded-binaries)"},"haskell.serverExecutablePath":{"scope":"machine-overridable","type":"string","default":"","markdownDescription":"Manually set a language server executable. Can be something on the $PATH or the full path to the executable itself. Works with `~,` `${HOME}` and `${workspaceFolder}`."},"haskell.serverExtraArgs":{"scope":"resource","type":"string","default":"","markdownDescription":"Pass additional arguments to the language server."},"haskell.ghcupExecutablePath":{"scope":"resource","type":"string","default":"","markdownDescription":"Manually set a ghcup executable path."},"haskell.serverEnvironment":{"scope":"resource","type":"object","default":{},"markdownDescription":"Define environment variables for the language server."},"haskell.promptBeforeDownloads":{"scope":"machine","type":"boolean","default":"true","markdownDescription":"Prompt before performing any downloads."},"haskell.manageHLS":{"scope":"resource","type":"string","default":"PATH","description":"How to manage/find HLS installations.","enum":["GHCup","PATH"],"enumDescriptions":["Will use ghcup and manage Haskell toolchain in the default location (usually '~/.ghcup')","Discovers HLS and other executables in system PATH"]},"haskell.toolchain":{"scope":"resource","type":"object","default":{},"description":"When manageHLS is set to GHCup, this can overwrite the automatic toolchain configuration with a more specific one. When a tool is omitted, the extension will manage the version (for 'ghc' we try to figure out the version the project requires). The format is '{\"tool\": \"version\", ...}'. 'version' accepts all identifiers that 'ghcup' accepts."},"haskell.upgradeGHCup":{"scope":"resource","type":"boolean","default":true,"description":"Whether to upgrade GHCup automatically when 'manageHLS' is set to 'GHCup'."},"haskell.checkProject":{"scope":"resource","type":"boolean","default":true,"description":"Whether to typecheck the entire project on load. It could drive to bad performance in large projects."},"haskell.maxCompletions":{"scope":"resource","default":40,"type":"integer","description":"Maximum number of completions sent to the editor."},"haskell.plugin.alternateNumberFormat.globalOn":{"default":true,"description":"Enables alternateNumberFormat plugin","scope":"resource","type":"boolean"},"haskell.plugin.cabal.globalOn":{"default":true,"description":"Enables cabal plugin","scope":"resource","type":"boolean"},"haskell.plugin.callHierarchy.globalOn":{"default":true,"description":"Enables callHierarchy plugin","scope":"resource","type":"boolean"},"haskell.plugin.changeTypeSignature.globalOn":{"default":true,"description":"Enables changeTypeSignature plugin","scope":"resource","type":"boolean"},"haskell.plugin.class.codeActionsOn":{"default":true,"description":"Enables class code actions","scope":"resource","type":"boolean"},"haskell.plugin.class.codeLensOn":{"default":true,"description":"Enables class code lenses","scope":"resource","type":"boolean"},"haskell.plugin.eval.config.diff":{"default":true,"markdownDescription":"Enable the diff output (WAS/NOW) of eval lenses","scope":"resource","type":"boolean"},"haskell.plugin.eval.config.exception":{"default":false,"markdownDescription":"Enable marking exceptions with `*** Exception:` similarly to doctest and GHCi.","scope":"resource","type":"boolean"},"haskell.plugin.eval.globalOn":{"default":true,"description":"Enables eval plugin","scope":"resource","type":"boolean"},"haskell.plugin.explicit-fields.globalOn":{"default":true,"description":"Enables explicit-fields plugin","scope":"resource","type":"boolean"},"haskell.plugin.explicit-fixity.globalOn":{"default":true,"description":"Enables explicit-fixity plugin","scope":"resource","type":"boolean"},"haskell.plugin.fourmolu.config.external":{"default":false,"markdownDescription":"Call out to an external \"fourmolu\" executable, rather than using the bundled library","scope":"resource","type":"boolean"},"haskell.plugin.gadt.globalOn":{"default":true,"description":"Enables gadt plugin","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-code-actions-bindings.globalOn":{"default":true,"description":"Enables ghcide-code-actions-bindings plugin","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-code-actions-fill-holes.globalOn":{"default":true,"description":"Enables ghcide-code-actions-fill-holes plugin","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-code-actions-imports-exports.globalOn":{"default":true,"description":"Enables ghcide-code-actions-imports-exports plugin","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-code-actions-type-signatures.globalOn":{"default":true,"description":"Enables ghcide-code-actions-type-signatures plugin","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-completions.config.autoExtendOn":{"default":true,"markdownDescription":"Extends the import list automatically when completing a out-of-scope identifier","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-completions.config.snippetsOn":{"default":true,"markdownDescription":"Inserts snippets when using code completions","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-completions.globalOn":{"default":true,"description":"Enables ghcide-completions plugin","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-hover-and-symbols.hoverOn":{"default":true,"description":"Enables ghcide-hover-and-symbols hover","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-hover-and-symbols.symbolsOn":{"default":true,"description":"Enables ghcide-hover-and-symbols symbols","scope":"resource","type":"boolean"},"haskell.plugin.ghcide-type-lenses.config.mode":{"default":"always","description":"Control how type lenses are shown","enum":["always","exported","diagnostics"],"enumDescriptions":["Always displays type lenses of global bindings","Only display type lenses of exported global bindings","Follows error messages produced by GHC about missing signatures"],"scope":"resource","type":"string"},"haskell.plugin.ghcide-type-lenses.globalOn":{"default":true,"description":"Enables ghcide-type-lenses plugin","scope":"resource","type":"boolean"},"haskell.plugin.haddockComments.globalOn":{"default":true,"description":"Enables haddockComments plugin","scope":"resource","type":"boolean"},"haskell.plugin.hlint.codeActionsOn":{"default":true,"description":"Enables hlint code actions","scope":"resource","type":"boolean"},"haskell.plugin.hlint.config.flags":{"default":[],"markdownDescription":"Flags used by hlint","scope":"resource","type":"array"},"haskell.plugin.hlint.diagnosticsOn":{"default":true,"description":"Enables hlint diagnostics","scope":"resource","type":"boolean"},"haskell.plugin.importLens.codeActionsOn":{"default":true,"description":"Enables importLens code actions","scope":"resource","type":"boolean"},"haskell.plugin.importLens.codeLensOn":{"default":true,"description":"Enables importLens code lenses","scope":"resource","type":"boolean"},"haskell.plugin.moduleName.globalOn":{"default":true,"description":"Enables moduleName plugin","scope":"resource","type":"boolean"},"haskell.plugin.pragmas.codeActionsOn":{"default":true,"description":"Enables pragmas code actions","scope":"resource","type":"boolean"},"haskell.plugin.pragmas.completionOn":{"default":true,"description":"Enables pragmas completions","scope":"resource","type":"boolean"},"haskell.plugin.qualifyImportedNames.globalOn":{"default":true,"description":"Enables qualifyImportedNames plugin","scope":"resource","type":"boolean"},"haskell.plugin.refineImports.codeActionsOn":{"default":true,"description":"Enables refineImports code actions","scope":"resource","type":"boolean"},"haskell.plugin.refineImports.codeLensOn":{"default":true,"description":"Enables refineImports code lenses","scope":"resource","type":"boolean"},"haskell.plugin.rename.config.crossModule":{"default":false,"markdownDescription":"Enable experimental cross-module renaming","scope":"resource","type":"boolean"},"haskell.plugin.rename.globalOn":{"default":true,"description":"Enables rename plugin","scope":"resource","type":"boolean"},"haskell.plugin.retrie.globalOn":{"default":true,"description":"Enables retrie plugin","scope":"resource","type":"boolean"},"haskell.plugin.splice.globalOn":{"default":true,"description":"Enables splice plugin","scope":"resource","type":"boolean"},"haskell.plugin.tactics.codeActionsOn":{"default":true,"description":"Enables tactics code actions","scope":"resource","type":"boolean"},"haskell.plugin.tactics.codeLensOn":{"default":true,"description":"Enables tactics code lenses","scope":"resource","type":"boolean"},"haskell.plugin.tactics.config.auto_gas":{"default":4,"markdownDescription":"The depth of the search tree when performing \"Attempt to fill hole\". Bigger values will be able to derive more solutions, but will take exponentially more time.","scope":"resource","type":"integer"},"haskell.plugin.tactics.config.hole_severity":{"default":null,"description":"The severity to use when showing hole diagnostics. These are noisy, but some editors don't allow jumping to all severities.","enum":[1,2,3,4,null],"enumDescriptions":["error","warning","info","hint","none"],"scope":"resource","type":"string"},"haskell.plugin.tactics.config.max_use_ctor_actions":{"default":5,"markdownDescription":"Maximum number of `Use constructor <x>` code actions that can appear","scope":"resource","type":"integer"},"haskell.plugin.tactics.config.proofstate_styling":{"default":true,"markdownDescription":"Should Wingman emit styling markup when showing metaprogram proof states?","scope":"resource","type":"boolean"},"haskell.plugin.tactics.config.timeout_duration":{"default":2,"markdownDescription":"The timeout for Wingman actions, in seconds","scope":"resource","type":"integer"},"haskell.plugin.tactics.hoverOn":{"default":true,"description":"Enables tactics hover","scope":"resource","type":"boolean"}}},"commands":[{"command":"haskell.commands.importIdentifier","title":"Haskell: Import identifier","description":"Imports a function or type based on a Hoogle search"},{"command":"haskell.commands.restartServer","title":"Haskell: Restart Haskell LSP server","description":"Restart the Haskell LSP server"},{"command":"haskell.commands.startServer","title":"Haskell: Start Haskell LSP server","description":"Start the Haskell LSP server"},{"command":"haskell.commands.stopServer","title":"Haskell: Stop Haskell LSP server","description":"Stop the Haskell LSP server"}]},"scripts":{"vscode:prepublish":"webpack --mode production","webpack":"webpack --mode none","watch":"webpack --mode development --watch","lint":"eslint -c .eslintrc.json --ext .ts src","lint-fix":"eslint --fix -c .eslintrc.json --ext .ts src","push-tag":"git tag -a $npm_package_version -m \"Version $npm_package_version\" && git push origin $npm_package_version","pretest":"tsc --alwaysStrict -p ./","format":"prettier . --write","test":"node ./out/test/runTest.js"},"husky":{"hooks":{"pre-commit":"pretty-quick --staged"}},"devDependencies":{"@types/bent":"^7.3.2","@types/cheerio":"^0.22.30","@types/glob":"^8.1.0","@types/js-yaml":"^4.0.5","@types/lodash-es":"^4.17.7","@types/mocha":"^10.0.1","@types/node":"^18.15.11","@types/vscode":"^1.77.0","@types/which":"^3.0.0","@types/yauzl":"^2.9.1","@typescript-eslint/eslint-plugin":"^5.57.1","@typescript-eslint/parser":"^5.57.1","@vscode/test-electron":"^2.3.0","eslint":"^8.38.0","eslint-webpack-plugin":"^4.0.0","glob":"^10.0.0","husky":"^8.0.2","mocha":"^10.2.0","prettier":"^2.8.7","pretty-quick":"^3.1.2","ts-loader":"^9.4.2","typescript":"^5.0.4","webpack":"^5.78.0","webpack-cli":"^5.0.1"},"extensionDependencies":["justusadam.language-haskell"],"dependencies":{"bent":"^7.3.12","cheerio":"^1.0.0-rc.12","js-yaml":"^4.1.0","lodash-es":"^4.17.21","lru-cache":"^7.18.3","ts-pattern":"^4.2.2","vscode-languageclient":"^7.0.0","which":"^3.0.0","yauzl":"^2.10.0"}},"location":{"$mid":1,"path":"/home/silverest/.vscode-insiders/extensions/haskell.haskell-2.2.4","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"aead9e6c-3483-4ce4-a09f-843e25ce696f","publisherId":"15dd703a-8dc9-4836-8bca-956652720b1c","publisherDisplayName":"Haskell","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1685213896522,"preRelease":false},"isValid":true,"validations":[]}]}